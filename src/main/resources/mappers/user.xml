<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.starbucksorder.another_back.repository.UserMapper">
    <insert id="saveUser" useGeneratedKeys="true" keyProperty="userId">
        insert into
            user_tb
        values(DEFAULT, #{phoneNumber}, #{memo}, #{starCount}, now(), now())
    </insert>

    <update id="update">
        UPDATE
            user_tb
        SET
            phone_number = #{phoneNumber},
            memo = #{memo},
            star_count = #{starCount},
            update_date = NOW()
        WHERE
            user_id = #{userId}
    </update>

    <delete id="deleteByIds">
        DELETE
        FROM
            user_tb
        WHERE
        user_id IN
        <foreach collection="userIds" item="userId" separator="," open="(" close=")">
            #{userId}
        </foreach>
    </delete>

    <update id="updateStar" statementType="CALLABLE" parameterType="com.starbucksorder.another_back.entity.User">
        call ps_generate_coupon(#{userId, mode=IN}, #{starCount, mode=IN})
    </update>


    <resultMap id="userResultMap" type="com.starbucksorder.another_back.entity.User">
        <id property="userId" column="user_id"/>
        <result property="phoneNumber" column="phone_number"/>
        <result property="memo" column="memo"/>
        <result property="registerDate" column="register_date"/>
        <result property="updateDate" column="update_date"/>
        <result property="starCount" column="star_count"/>
        <association property="coupons" resultMap="couponResultMap"/>
    </resultMap>

    <resultMap id="couponResultMap" type="com.starbucksorder.another_back.entity.Coupon">
        <id property="couponId" column="coupon_id"/>
        <result property="userId" column="user_id"/>
        <result property="couponName" column="coupon_name"/>
        <result property="registerDate" column="ct_register_date"/>
        <result property="useDate" column="use_date"/>
    </resultMap>


    <select id="findUserByPhoneNumber" resultMap="userResultMap">
        SELECT
            ut.user_id,
            ut.phone_number,
            ut.memo,
            ut.star_count,
            ut.register_date,
            ut.update_date,

            ct.coupon_id,
            ct.user_id,
            ct.coupon_name,
            ct.register_date AS ct_register_date,
            ct.use_date
        FROM
            user_tb ut
            LEFT OUTER JOIN coupon_tb ct on (ct.user_id = ut.user_id)
        WHERE
            ut.phone_number = #{phoneNumber}
    </select>
    <select id="findCouponsById" resultMap="userResultMap">
        SELECT
            ut.user_id,
            ut.phone_number,
            ut.memo,
            ut.star_count,
            ut.register_date,
            ut.update_date,

            ct.coupon_id,
            ct.user_id,
            ct.coupon_name,
            ct.register_date AS ct_register_date,
            ct.use_date
        FROM
            user_tb ut
            INNER JOIN coupon_tb ct on (ct.user_id = ut.user_id)
        WHERE
            ut.user_id = #{userId}
            AND ct.use_date IS NULL
    </select>

    <select id="findUserByUserId" resultType="com.starbucksorder.another_back.entity.User">
        SELECT
            user_id as userId,
            phone_number as phoneNumber,
            memo,
            star_count AS starCount,
            register_date as registerDate,
            update_date as updateDate
        FROM
            user_tb
        WHERE
            user_id = #{userId}
    </select>

    <select id="count" resultType="int">
        SELECT
            COUNT(*)
        FROM
            user_tb
        <where>
            <if test="searchName != null and searchName != ''">
                (phone_number LIKE CONCAT('%', #{searchName}, '%') OR
                memo LIKE CONCAT('%', #{searchName}, '%'))
            </if>
        </where>
    </select>

    <select id="getUserAll" resultType="com.starbucksorder.another_back.entity.User">
        SELECT
            user_id AS userId,
            phone_number AS phoneNumber,
            memo,
            star_count AS starCount
        FROM
            user_tb
        WHERE
            phone_number LIKE CONCAT('%', #{searchName}, '%')
            OR memo LIKE CONCAT ('%', #{searchName}, '%')
        ORDER BY
            user_id
        LIMIT
            #{startIndex}, #{limit}
    </select>

</mapper>