<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.starbucksorder.another_back.repository.OrderMapper">

    <insert id="save" useGeneratedKeys="true" keyProperty="orderId">
        INSERT INTO
            order_tb
        VALUES(DEFAULT, #{userId}, #{paymentId}, #{paymentType}, #{orderType}, #{orderAmount}, 1, now(), now())
    </insert>

    <update id="update">
        update
            order_tb
        set
            order_state = 1
        where
            order_id = #{orderId}
    </update>

    <select id="findOrderIdByUserId" resultType="java.lang.Long">
        select
            order_id
        from
            order_tb
        where
            user_id = #{userId}

    </select>

    <select id="findByDate" resultType="com.starbucksorder.another_back.entity.Order">
        SELECT
            order_id AS orderId,
            user_id AS userId,
            payment_id AS paymentId,
            payment_type AS paymentType,
            order_type AS orderType,
            order_amount AS orderAmount,
            order_state AS orderState,
            create_date AS createDate,
            update_date AS updateDate
        FROM
            order_tb
        WHERE
            DATE(create_date) BETWEEN DATE(#{startDate}) AND DATE(#{endDate})
        ORDER BY
            create_date DESC
        LIMIT
            #{startIndex}, #{limit}
    </select>
    <select id="countByDate" resultType="int">
        SELECT
            COUNT(order_id)
        FROM
            order_tb
        WHERE
            DATE(create_date) BETWEEN DATE(#{startDate}) AND DATE(#{endDate})
    </select>

</mapper>